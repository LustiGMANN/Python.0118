+*In[1]:*+
[source, ipython3]
----
import numpy as np
import matplotlib.pyplot as plt
from sklearn import datasets
----


+*In[5]:*+
[source, ipython3]
----
#決定底框
plt.axes([0.1,0.1,.5,.5])
#給定刻度, 若不給定值, 圖的周邊無文字
plt.xticks([]), plt.yticks([])
plt.text(0.1,0.1, 'axes([0.1,0.1,.5,.5])',ha='left',va='center',size=16,alpha=.5)

plt.axes([0.3 , 0.3 , .5 , .5])
plt.xticks([0 , 0.2 , 0.4 ]), plt.yticks([0 , 0.2 , 0.4 ])
plt.text(0.1,0.1, 'axes([0.3,0.3,.5,.5])',ha='left',va='center',size=16,alpha=.5)

plt.axes([0.5 , 0.5 , .5 , .5])
plt.xticks([0 , 0.2 , 0.4 ]), plt.yticks([0 , 0.2 , 0.4 ])
plt.text(0.1,0.1, 'axes([0.5,0.5,.5,.5])',ha='left',va='center',size=16,alpha=.5)

plt.axes([0.7 , 0.7 , .5 , .5])
plt.xticks([0 , 0.2 , 0.4 ]), plt.yticks([0 , 0.2 , 0.4 ])
plt.text(0.1,0.1, 'axes([0.7,0.7,.5,.5])',ha='left',va='center',size=16,alpha=.5)

plt.show()
----


+*Out[5]:*+
----
![png](output_1_0.png)
----


+*In[17]:*+
[source, ipython3]
----
 #配置12 組 Bar
n = 12 
X = np.arange(n)

 #給定數學運算式
Y1 = (1-X/float(n)) * np.random.uniform(0.5,1.0,n)
Y2 = (1-X/float(n)) * np.random.uniform(0.5,1.0,n)

#指定上半部繪製區域, 給定 Bar 顏色, 邊界顏色
plt.bar(X, +Y1, facecolor='#9999ff', edgecolor='white')
# +Y 指的是 XY 四象限的第一象限
# -Y 指的是 XY 四象限的第二象限

plt.bar(X , -Y1 , facecolor = '#FFC0CB' , edgecolor = 'white')
#指定下半部繪製區域, 給定 Bar 顏色, 邊界顏色
#顏色除了用色標外, 也可以用顏色文字描述, red: 紅色


 #設定繪圖圖示區間
for x,y in zip(X,Y1):
    plt.text(x+0.4, y+0.05, '%.2f' % y, ha='center', va= 'bottom')

 #設定Y軸區間
plt.ylim(-1.25,+1.25)
plt.show()
----


+*Out[17]:*+
----
![png](output_2_0.png)
----


+*In[ ]:*+
[source, ipython3]
----

----
